# Generated by Django 5.2.1 on 2025-06-01 16:14

import django.core.validators
import django.db.models.deletion
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0002_historicaldepartment_historicalemployee_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InterviewRound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('round_type', models.CharField(choices=[('phone_screening', 'Phone Screening'), ('video_screening', 'Video Screening'), ('technical_phone', 'Technical Phone'), ('technical_video', 'Technical Video'), ('technical_onsite', 'Technical On-site'), ('behavioral', 'Behavioral Interview'), ('panel', 'Panel Interview'), ('presentation', 'Presentation'), ('case_study', 'Case Study'), ('final', 'Final Interview'), ('culture_fit', 'Culture Fit'), ('executive', 'Executive Interview')], max_length=20)),
                ('sequence_order', models.PositiveIntegerField(help_text='Order in the interview process')),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('is_technical', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('interviewer_instructions', models.TextField(blank=True, null=True)),
                ('candidate_instructions', models.TextField(blank=True, null=True)),
                ('required_interviewers', models.PositiveIntegerField(default=1)),
                ('minimum_score_to_pass', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('10'))])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['job_posting', 'sequence_order'],
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('current_position', models.CharField(blank=True, max_length=100, null=True)),
                ('current_company', models.CharField(blank=True, max_length=100, null=True)),
                ('years_of_experience', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(default='United States', max_length=50)),
                ('linkedin_url', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('portfolio_url', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('github_url', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('source', models.CharField(choices=[('website', 'Company Website'), ('job_board', 'Job Board'), ('referral', 'Employee Referral'), ('linkedin', 'LinkedIn'), ('recruitment_agency', 'Recruitment Agency'), ('university', 'University/Campus'), ('social_media', 'Social Media'), ('direct_contact', 'Direct Contact'), ('other', 'Other')], default='website', max_length=30)),
                ('availability_date', models.DateField(blank=True, help_text='When candidate can start', null=True)),
                ('salary_expectation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('willing_to_relocate', models.BooleanField(default=False)),
                ('requires_visa_sponsorship', models.BooleanField(default=False)),
                ('recruiter_notes', models.TextField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('blacklisted', models.BooleanField(default=False)),
                ('blacklist_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referrer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to='employees.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('applied_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('screening', 'Under Screening'), ('interview', 'Interview Stage'), ('reference_check', 'Reference Check'), ('offer_pending', 'Offer Pending'), ('offer_extended', 'Offer Extended'), ('offer_accepted', 'Offer Accepted'), ('offer_declined', 'Offer Declined'), ('hired', 'Hired'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='applied', max_length=20)),
                ('cover_letter', models.TextField(blank=True, null=True)),
                ('initial_score', models.IntegerField(blank=True, help_text='Initial screening score (1-10)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('overall_score', models.DecimalField(blank=True, decimal_places=2, help_text='Overall application score', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('10'))])),
                ('screening_completed', models.BooleanField(default=False)),
                ('screening_notes', models.TextField(blank=True, null=True)),
                ('interview_stage', models.CharField(blank=True, max_length=50, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('rejection_feedback', models.TextField(blank=True, null=True)),
                ('hired_date', models.DateField(blank=True, null=True)),
                ('recruiter_notes', models.TextField(blank=True, null=True)),
                ('hiring_manager_notes', models.TextField(blank=True, null=True)),
                ('last_activity_date', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_recruiter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_applications', to=settings.AUTH_USER_MODEL)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='recruitment.candidate')),
            ],
            options={
                'ordering': ['-applied_date'],
            },
        ),
        migrations.CreateModel(
            name='CandidateDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('resume', 'Resume/CV'), ('cover_letter', 'Cover Letter'), ('portfolio', 'Portfolio'), ('certificate', 'Certificate'), ('transcript', 'Transcript'), ('reference_letter', 'Reference Letter'), ('work_sample', 'Work Sample'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='candidate_documents/')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('mime_type', models.CharField(blank=True, max_length=100, null=True)),
                ('is_confidential', models.BooleanField(default=False)),
                ('version', models.CharField(default='1.0', max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='recruitment.candidate')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recruitment.candidatedocument')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalCandidate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('candidate_id', models.CharField(db_index=True, editable=False, max_length=20)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('current_position', models.CharField(blank=True, max_length=100, null=True)),
                ('current_company', models.CharField(blank=True, max_length=100, null=True)),
                ('years_of_experience', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(default='United States', max_length=50)),
                ('linkedin_url', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('portfolio_url', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('github_url', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('source', models.CharField(choices=[('website', 'Company Website'), ('job_board', 'Job Board'), ('referral', 'Employee Referral'), ('linkedin', 'LinkedIn'), ('recruitment_agency', 'Recruitment Agency'), ('university', 'University/Campus'), ('social_media', 'Social Media'), ('direct_contact', 'Direct Contact'), ('other', 'Other')], default='website', max_length=30)),
                ('availability_date', models.DateField(blank=True, help_text='When candidate can start', null=True)),
                ('salary_expectation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('willing_to_relocate', models.BooleanField(default=False)),
                ('requires_visa_sponsorship', models.BooleanField(default=False)),
                ('recruiter_notes', models.TextField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('blacklisted', models.BooleanField(default=False)),
                ('blacklist_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('referrer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee')),
            ],
            options={
                'verbose_name': 'historical candidate',
                'verbose_name_plural': 'historical candidates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCandidateDocument',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('resume', 'Resume/CV'), ('cover_letter', 'Cover Letter'), ('portfolio', 'Portfolio'), ('certificate', 'Certificate'), ('transcript', 'Transcript'), ('reference_letter', 'Reference Letter'), ('work_sample', 'Work Sample'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('file', models.TextField(max_length=100)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('mime_type', models.CharField(blank=True, max_length=100, null=True)),
                ('is_confidential', models.BooleanField(default=False)),
                ('version', models.CharField(default='1.0', max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('candidate', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='recruitment.candidate')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('previous_version', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='recruitment.candidatedocument')),
                ('uploaded_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical candidate document',
                'verbose_name_plural': 'historical candidate documents',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalJobPosting',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('job_id', models.CharField(db_index=True, editable=False, max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(help_text='Detailed job description')),
                ('responsibilities', models.TextField(help_text='Key responsibilities and duties')),
                ('requirements', models.TextField(help_text='Required qualifications and skills')),
                ('preferred_qualifications', models.TextField(blank=True, help_text='Preferred but not required qualifications', null=True)),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('temporary', 'Temporary'), ('internship', 'Internship'), ('freelance', 'Freelance')], default='full_time', max_length=20)),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level'), ('junior', 'Junior'), ('mid', 'Mid Level'), ('senior', 'Senior'), ('lead', 'Lead'), ('principal', 'Principal'), ('executive', 'Executive')], max_length=20)),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_currency', models.CharField(default='USD', max_length=3)),
                ('location', models.CharField(max_length=200)),
                ('remote_work_allowed', models.BooleanField(default=False)),
                ('travel_required', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('closed', 'Closed'), ('filled', 'Filled'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('posted_date', models.DateTimeField(blank=True, null=True)),
                ('closing_date', models.DateTimeField(blank=True, null=True)),
                ('application_deadline', models.DateTimeField(blank=True, null=True)),
                ('max_applications', models.IntegerField(blank=True, help_text='Maximum number of applications to accept', null=True)),
                ('application_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('application_url', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('positions_available', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('priority_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('keywords', models.TextField(blank=True, help_text='SEO keywords for job boards', null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('department', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.department')),
                ('hiring_manager', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical job posting',
                'verbose_name_plural': 'historical job postings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOfferLetter',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('offer_id', models.CharField(db_index=True, editable=False, max_length=20)),
                ('position_title', models.CharField(max_length=200)),
                ('offer_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('temporary', 'Temporary'), ('internship', 'Internship')], max_length=20)),
                ('base_salary', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('salary_frequency', models.CharField(choices=[('hourly', 'Hourly'), ('weekly', 'Weekly'), ('biweekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('annually', 'Annually')], default='annually', max_length=20)),
                ('signing_bonus', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('equity_percentage', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('equity_shares', models.PositiveIntegerField(blank=True, null=True)),
                ('health_insurance', models.BooleanField(default=True)),
                ('dental_insurance', models.BooleanField(default=True)),
                ('vision_insurance', models.BooleanField(default=True)),
                ('retirement_plan', models.BooleanField(default=True)),
                ('paid_time_off', models.PositiveIntegerField(default=20, help_text='Days per year')),
                ('sick_leave', models.PositiveIntegerField(default=10, help_text='Days per year')),
                ('work_location', models.CharField(max_length=200)),
                ('remote_work_allowed', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('sent', 'Sent to Candidate'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired'), ('withdrawn', 'Withdrawn')], default='draft', max_length=20)),
                ('offer_expiry_date', models.DateTimeField(help_text='When the offer expires')),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('probation_period', models.PositiveIntegerField(blank=True, help_text='Probation period in days', null=True)),
                ('notice_period', models.PositiveIntegerField(default=14, help_text='Notice period in days')),
                ('offer_letter_document', models.TextField(blank=True, max_length=100, null=True)),
                ('special_conditions', models.TextField(blank=True, null=True)),
                ('internal_notes', models.TextField(blank=True, null=True)),
                ('decline_reason', models.TextField(blank=True, null=True)),
                ('counter_offer_details', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('application', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='recruitment.application')),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.department')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('prepared_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reporting_manager', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee')),
            ],
            options={
                'verbose_name': 'historical offer letter',
                'verbose_name_plural': 'historical offer letters',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interview_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('scheduled_start', models.DateTimeField()),
                ('scheduled_end', models.DateTimeField()),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('meeting_type', models.CharField(choices=[('in_person', 'In Person'), ('video_call', 'Video Call'), ('phone_call', 'Phone Call'), ('virtual_reality', 'Virtual Reality')], default='video_call', max_length=20)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('meeting_link', models.URLField(blank=True, null=True)),
                ('meeting_id', models.CharField(blank=True, max_length=100, null=True)),
                ('meeting_password', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('no_show', 'No Show'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('preparation_notes', models.TextField(blank=True, null=True)),
                ('special_instructions', models.TextField(blank=True, null=True)),
                ('invitation_sent', models.BooleanField(default=False)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('confirmation_received', models.BooleanField(default=False)),
                ('reschedule_count', models.PositiveIntegerField(default=0)),
                ('reschedule_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('additional_interviewers', models.ManyToManyField(blank=True, related_name='additional_interviews', to=settings.AUTH_USER_MODEL)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='recruitment.application')),
                ('primary_interviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_interviews', to=settings.AUTH_USER_MODEL)),
                ('interview_round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='recruitment.interviewround')),
            ],
            options={
                'ordering': ['scheduled_start'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalInterviewEvaluation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('overall_rating', models.IntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('recommendation', models.CharField(choices=[('strong_hire', 'Strong Hire'), ('hire', 'Hire'), ('no_hire', 'No Hire'), ('strong_no_hire', 'Strong No Hire')], max_length=20)),
                ('technical_skills', models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('communication_skills', models.IntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('problem_solving', models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('cultural_fit', models.IntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('enthusiasm', models.IntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('experience_relevance', models.IntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('strengths', models.TextField(help_text="Candidate's key strengths")),
                ('weaknesses', models.TextField(help_text='Areas for improvement or concerns')),
                ('specific_feedback', models.TextField(help_text='Specific observations and examples')),
                ('questions_asked', models.TextField(blank=True, null=True)),
                ('candidate_questions', models.TextField(blank=True, null=True)),
                ('would_work_with_again', models.BooleanField(blank=True, null=True)),
                ('salary_recommendation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('private_notes', models.TextField(blank=True, help_text='Internal notes not shared with candidate', null=True)),
                ('submitted_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('evaluator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('interview', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='recruitment.interview')),
            ],
            options={
                'verbose_name': 'historical interview evaluation',
                'verbose_name_plural': 'historical interview evaluations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='InterviewEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.IntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('recommendation', models.CharField(choices=[('strong_hire', 'Strong Hire'), ('hire', 'Hire'), ('no_hire', 'No Hire'), ('strong_no_hire', 'Strong No Hire')], max_length=20)),
                ('technical_skills', models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('communication_skills', models.IntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('problem_solving', models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('cultural_fit', models.IntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('enthusiasm', models.IntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('experience_relevance', models.IntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('strengths', models.TextField(help_text="Candidate's key strengths")),
                ('weaknesses', models.TextField(help_text='Areas for improvement or concerns')),
                ('specific_feedback', models.TextField(help_text='Specific observations and examples')),
                ('questions_asked', models.TextField(blank=True, null=True)),
                ('candidate_questions', models.TextField(blank=True, null=True)),
                ('would_work_with_again', models.BooleanField(blank=True, null=True)),
                ('salary_recommendation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('private_notes', models.TextField(blank=True, help_text='Internal notes not shared with candidate', null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interview_evaluations', to=settings.AUTH_USER_MODEL)),
                ('interview', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation', to='recruitment.interview')),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalInterview',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('interview_id', models.CharField(db_index=True, editable=False, max_length=20)),
                ('scheduled_start', models.DateTimeField()),
                ('scheduled_end', models.DateTimeField()),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('meeting_type', models.CharField(choices=[('in_person', 'In Person'), ('video_call', 'Video Call'), ('phone_call', 'Phone Call'), ('virtual_reality', 'Virtual Reality')], default='video_call', max_length=20)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('meeting_link', models.URLField(blank=True, null=True)),
                ('meeting_id', models.CharField(blank=True, max_length=100, null=True)),
                ('meeting_password', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('no_show', 'No Show'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('preparation_notes', models.TextField(blank=True, null=True)),
                ('special_instructions', models.TextField(blank=True, null=True)),
                ('invitation_sent', models.BooleanField(default=False)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('confirmation_received', models.BooleanField(default=False)),
                ('reschedule_count', models.PositiveIntegerField(default=0)),
                ('reschedule_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('application', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='recruitment.application')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('primary_interviewer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('interview_round', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='recruitment.interviewround')),
            ],
            options={
                'verbose_name': 'historical interview',
                'verbose_name_plural': 'historical interviews',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(help_text='Detailed job description')),
                ('responsibilities', models.TextField(help_text='Key responsibilities and duties')),
                ('requirements', models.TextField(help_text='Required qualifications and skills')),
                ('preferred_qualifications', models.TextField(blank=True, help_text='Preferred but not required qualifications', null=True)),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('temporary', 'Temporary'), ('internship', 'Internship'), ('freelance', 'Freelance')], default='full_time', max_length=20)),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level'), ('junior', 'Junior'), ('mid', 'Mid Level'), ('senior', 'Senior'), ('lead', 'Lead'), ('principal', 'Principal'), ('executive', 'Executive')], max_length=20)),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_currency', models.CharField(default='USD', max_length=3)),
                ('location', models.CharField(max_length=200)),
                ('remote_work_allowed', models.BooleanField(default=False)),
                ('travel_required', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('closed', 'Closed'), ('filled', 'Filled'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('posted_date', models.DateTimeField(blank=True, null=True)),
                ('closing_date', models.DateTimeField(blank=True, null=True)),
                ('application_deadline', models.DateTimeField(blank=True, null=True)),
                ('max_applications', models.IntegerField(blank=True, help_text='Maximum number of applications to accept', null=True)),
                ('application_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('application_url', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('positions_available', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('priority_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('keywords', models.TextField(blank=True, help_text='SEO keywords for job boards', null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_recruiters', models.ManyToManyField(blank=True, related_name='assigned_job_postings', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_postings', to='employees.department')),
                ('hiring_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_job_postings', to='employees.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='interviewround',
            name='job_posting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interview_rounds', to='recruitment.jobposting'),
        ),
        migrations.CreateModel(
            name='HistoricalRecruitmentPipeline',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('total_applications', models.PositiveIntegerField(default=0)),
                ('applications_screened', models.PositiveIntegerField(default=0)),
                ('candidates_interviewed', models.PositiveIntegerField(default=0)),
                ('offers_extended', models.PositiveIntegerField(default=0)),
                ('offers_accepted', models.PositiveIntegerField(default=0)),
                ('positions_filled', models.PositiveIntegerField(default=0)),
                ('avg_time_to_screen', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('avg_time_to_interview', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('avg_time_to_offer', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('avg_time_to_hire', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('offer_acceptance_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('interview_to_offer_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('application_to_interview_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('cost_per_hire', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('recruitment_cost_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('top_candidate_source', models.CharField(blank=True, max_length=30, null=True)),
                ('conversion_rate_by_source', models.JSONField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('job_posting', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='recruitment.jobposting')),
            ],
            options={
                'verbose_name': 'historical recruitment pipeline',
                'verbose_name_plural': 'historical recruitment pipelines',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInterviewRound',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('round_type', models.CharField(choices=[('phone_screening', 'Phone Screening'), ('video_screening', 'Video Screening'), ('technical_phone', 'Technical Phone'), ('technical_video', 'Technical Video'), ('technical_onsite', 'Technical On-site'), ('behavioral', 'Behavioral Interview'), ('panel', 'Panel Interview'), ('presentation', 'Presentation'), ('case_study', 'Case Study'), ('final', 'Final Interview'), ('culture_fit', 'Culture Fit'), ('executive', 'Executive Interview')], max_length=20)),
                ('sequence_order', models.PositiveIntegerField(help_text='Order in the interview process')),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('is_technical', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('interviewer_instructions', models.TextField(blank=True, null=True)),
                ('candidate_instructions', models.TextField(blank=True, null=True)),
                ('required_interviewers', models.PositiveIntegerField(default=1)),
                ('minimum_score_to_pass', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('10'))])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('job_posting', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='recruitment.jobposting')),
            ],
            options={
                'verbose_name': 'historical interview round',
                'verbose_name_plural': 'historical interview rounds',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalApplication',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('application_id', models.CharField(db_index=True, editable=False, max_length=20)),
                ('applied_date', models.DateTimeField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('screening', 'Under Screening'), ('interview', 'Interview Stage'), ('reference_check', 'Reference Check'), ('offer_pending', 'Offer Pending'), ('offer_extended', 'Offer Extended'), ('offer_accepted', 'Offer Accepted'), ('offer_declined', 'Offer Declined'), ('hired', 'Hired'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='applied', max_length=20)),
                ('cover_letter', models.TextField(blank=True, null=True)),
                ('initial_score', models.IntegerField(blank=True, help_text='Initial screening score (1-10)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('overall_score', models.DecimalField(blank=True, decimal_places=2, help_text='Overall application score', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('10'))])),
                ('screening_completed', models.BooleanField(default=False)),
                ('screening_notes', models.TextField(blank=True, null=True)),
                ('interview_stage', models.CharField(blank=True, max_length=50, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('rejection_feedback', models.TextField(blank=True, null=True)),
                ('hired_date', models.DateField(blank=True, null=True)),
                ('recruiter_notes', models.TextField(blank=True, null=True)),
                ('hiring_manager_notes', models.TextField(blank=True, null=True)),
                ('last_activity_date', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assigned_recruiter', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('candidate', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='recruitment.candidate')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('job_posting', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='recruitment.jobposting')),
            ],
            options={
                'verbose_name': 'historical application',
                'verbose_name_plural': 'historical applications',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='application',
            name='job_posting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='recruitment.jobposting'),
        ),
        migrations.CreateModel(
            name='OfferLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('position_title', models.CharField(max_length=200)),
                ('offer_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('temporary', 'Temporary'), ('internship', 'Internship')], max_length=20)),
                ('base_salary', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('salary_frequency', models.CharField(choices=[('hourly', 'Hourly'), ('weekly', 'Weekly'), ('biweekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('annually', 'Annually')], default='annually', max_length=20)),
                ('signing_bonus', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('equity_percentage', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('equity_shares', models.PositiveIntegerField(blank=True, null=True)),
                ('health_insurance', models.BooleanField(default=True)),
                ('dental_insurance', models.BooleanField(default=True)),
                ('vision_insurance', models.BooleanField(default=True)),
                ('retirement_plan', models.BooleanField(default=True)),
                ('paid_time_off', models.PositiveIntegerField(default=20, help_text='Days per year')),
                ('sick_leave', models.PositiveIntegerField(default=10, help_text='Days per year')),
                ('work_location', models.CharField(max_length=200)),
                ('remote_work_allowed', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('sent', 'Sent to Candidate'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired'), ('withdrawn', 'Withdrawn')], default='draft', max_length=20)),
                ('offer_expiry_date', models.DateTimeField(help_text='When the offer expires')),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('probation_period', models.PositiveIntegerField(blank=True, help_text='Probation period in days', null=True)),
                ('notice_period', models.PositiveIntegerField(default=14, help_text='Notice period in days')),
                ('offer_letter_document', models.FileField(blank=True, null=True, upload_to='offer_letters/')),
                ('special_conditions', models.TextField(blank=True, null=True)),
                ('internal_notes', models.TextField(blank=True, null=True)),
                ('decline_reason', models.TextField(blank=True, null=True)),
                ('counter_offer_details', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('additional_documents', models.ManyToManyField(blank=True, to='recruitment.candidatedocument')),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='offer_letter', to='recruitment.application')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_offers', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.department')),
                ('prepared_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prepared_offers', to=settings.AUTH_USER_MODEL)),
                ('reporting_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecruitmentPipeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_applications', models.PositiveIntegerField(default=0)),
                ('applications_screened', models.PositiveIntegerField(default=0)),
                ('candidates_interviewed', models.PositiveIntegerField(default=0)),
                ('offers_extended', models.PositiveIntegerField(default=0)),
                ('offers_accepted', models.PositiveIntegerField(default=0)),
                ('positions_filled', models.PositiveIntegerField(default=0)),
                ('avg_time_to_screen', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('avg_time_to_interview', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('avg_time_to_offer', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('avg_time_to_hire', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('offer_acceptance_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('interview_to_offer_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('application_to_interview_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('cost_per_hire', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('recruitment_cost_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('top_candidate_source', models.CharField(blank=True, max_length=30, null=True)),
                ('conversion_rate_by_source', models.JSONField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('job_posting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pipeline', to='recruitment.jobposting')),
            ],
            options={
                'ordering': ['-last_updated'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='interviewround',
            unique_together={('job_posting', 'sequence_order')},
        ),
        migrations.AlterUniqueTogether(
            name='application',
            unique_together={('candidate', 'job_posting')},
        ),
    ]
