# Generated by Django 5.2.1 on 2025-05-31 22:45

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0002_historicaldepartment_historicalemployee_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color_code', models.CharField(default='#3498db', help_text='Hex color for calendar display', max_length=7)),
                ('default_days_per_year', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('max_days_per_request', models.PositiveIntegerField(default=30, help_text='Maximum consecutive days that can be requested')),
                ('min_notice_days', models.PositiveIntegerField(default=1, help_text='Minimum days of advance notice required')),
                ('carry_over_type', models.CharField(choices=[('none', 'No Carry Over'), ('partial', 'Partial Carry Over'), ('full', 'Full Carry Over')], default='none', max_length=10)),
                ('max_carry_over_days', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('carry_over_expiry_months', models.PositiveIntegerField(default=12, help_text='Months after which carried over leave expires')),
                ('requires_approval', models.BooleanField(default=True)),
                ('requires_documentation', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalHoliday',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('holiday_type', models.CharField(choices=[('public', 'Public Holiday'), ('company', 'Company Holiday'), ('observance', 'Observance'), ('floating', 'Floating Holiday')], default='public', max_length=15)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_mandatory', models.BooleanField(default=True, help_text='Whether this holiday is mandatory for all employees')),
                ('affects_leave_calculation', models.BooleanField(default=True, help_text='Whether this holiday affects leave day calculations')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical holiday',
                'verbose_name_plural': 'historical holidays',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLeavePolicy',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField()),
                ('blackout_dates_start', models.DateField(blank=True, help_text='Start of blackout period (e.g., year-end)', null=True)),
                ('blackout_dates_end', models.DateField(blank=True, help_text='End of blackout period', null=True)),
                ('probation_leave_allowed', models.BooleanField(default=False, help_text='Allow leave during probation period')),
                ('advance_booking_months', models.PositiveIntegerField(default=12, help_text='How far in advance can leave be booked')),
                ('is_active', models.BooleanField(default=True)),
                ('effective_from', models.DateField(default=django.utils.timezone.now)),
                ('effective_until', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('department', models.ForeignKey(blank=True, db_constraint=False, help_text='Leave empty for company-wide policy', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.department')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical leave policy',
                'verbose_name_plural': 'historical leave policys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLeaveType',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('color_code', models.CharField(default='#3498db', help_text='Hex color for calendar display', max_length=7)),
                ('default_days_per_year', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('max_days_per_request', models.PositiveIntegerField(default=30, help_text='Maximum consecutive days that can be requested')),
                ('min_notice_days', models.PositiveIntegerField(default=1, help_text='Minimum days of advance notice required')),
                ('carry_over_type', models.CharField(choices=[('none', 'No Carry Over'), ('partial', 'Partial Carry Over'), ('full', 'Full Carry Over')], default='none', max_length=10)),
                ('max_carry_over_days', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('carry_over_expiry_months', models.PositiveIntegerField(default=12, help_text='Months after which carried over leave expires')),
                ('requires_approval', models.BooleanField(default=True)),
                ('requires_documentation', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical leave type',
                'verbose_name_plural': 'historical leave types',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTeamSchedule',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_employees', models.PositiveIntegerField(default=0)),
                ('employees_on_leave_count', models.PositiveIntegerField(default=0)),
                ('max_leave_percentage', models.DecimalField(decimal_places=2, default=30.0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('is_critical', models.BooleanField(default=False, help_text='True if leave percentage exceeds threshold')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('department', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.department')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical team schedule',
                'verbose_name_plural': 'historical team schedules',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LeavePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('blackout_dates_start', models.DateField(blank=True, help_text='Start of blackout period (e.g., year-end)', null=True)),
                ('blackout_dates_end', models.DateField(blank=True, help_text='End of blackout period', null=True)),
                ('probation_leave_allowed', models.BooleanField(default=False, help_text='Allow leave during probation period')),
                ('advance_booking_months', models.PositiveIntegerField(default=12, help_text='How far in advance can leave be booked')),
                ('is_active', models.BooleanField(default=True)),
                ('effective_from', models.DateField(default=django.utils.timezone.now)),
                ('effective_until', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, help_text='Leave empty for company-wide policy', null=True, on_delete=django.db.models.deletion.CASCADE, to='employees.department')),
            ],
            options={
                'ordering': ['-effective_from'],
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('duration_type', models.CharField(choices=[('full_day', 'Full Day'), ('half_day_morning', 'Half Day (Morning)'), ('half_day_afternoon', 'Half Day (Afternoon)'), ('hours', 'Specific Hours')], default='full_day', max_length=20)),
                ('total_days', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.5'))])),
                ('reason', models.TextField(help_text='Reason for leave request')),
                ('emergency_contact', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('withdrawn', 'Withdrawn')], default='draft', max_length=15)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('supporting_document', models.FileField(blank=True, help_text='Supporting documentation (medical certificate, etc.)', null=True, upload_to='leave_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leave_requests', to='employees.employee')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='employees.employee')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='leaves.leavetype')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalLeaveRequestComment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('comment', models.TextField()),
                ('is_internal', models.BooleanField(default=False, help_text='Internal comments not visible to the employee')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('commented_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('leave_request', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='leaves.leaverequest')),
            ],
            options={
                'verbose_name': 'historical leave request comment',
                'verbose_name_plural': 'historical leave request comments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LeaveRequestComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('is_internal', models.BooleanField(default=False, help_text='Internal comments not visible to the employee')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commented_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_comments', to='employees.employee')),
                ('leave_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='leaves.leaverequest')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalLeaveRequest',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('request_id', models.CharField(db_index=True, editable=False, max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('duration_type', models.CharField(choices=[('full_day', 'Full Day'), ('half_day_morning', 'Half Day (Morning)'), ('half_day_afternoon', 'Half Day (Afternoon)'), ('hours', 'Specific Hours')], default='full_day', max_length=20)),
                ('total_days', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.5'))])),
                ('reason', models.TextField(help_text='Reason for leave request')),
                ('emergency_contact', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('withdrawn', 'Withdrawn')], default='draft', max_length=15)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('supporting_document', models.TextField(blank=True, help_text='Supporting documentation (medical certificate, etc.)', max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee')),
                ('employee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('leave_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='leaves.leavetype')),
            ],
            options={
                'verbose_name': 'historical leave request',
                'verbose_name_plural': 'historical leave requests',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLeaveBalance',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('year', models.PositiveIntegerField(default=2025)),
                ('allocated_days', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('used_days', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('pending_days', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('carried_over_days', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('employee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('leave_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='leaves.leavetype')),
            ],
            options={
                'verbose_name': 'historical leave balance',
                'verbose_name_plural': 'historical leave balances',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('holiday_type', models.CharField(choices=[('public', 'Public Holiday'), ('company', 'Company Holiday'), ('observance', 'Observance'), ('floating', 'Floating Holiday')], default='public', max_length=15)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_mandatory', models.BooleanField(default=True, help_text='Whether this holiday is mandatory for all employees')),
                ('affects_leave_calculation', models.BooleanField(default=True, help_text='Whether this holiday affects leave day calculations')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('departments', models.ManyToManyField(blank=True, help_text='Leave empty for company-wide holidays', to='employees.department')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('name', 'date')},
            },
        ),
        migrations.CreateModel(
            name='LeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(default=2025)),
                ('allocated_days', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('used_days', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('pending_days', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('carried_over_days', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_balances', to='employees.employee')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balances', to='leaves.leavetype')),
            ],
            options={
                'ordering': ['-year', 'employee', 'leave_type'],
                'unique_together': {('employee', 'leave_type', 'year')},
            },
        ),
        migrations.CreateModel(
            name='TeamSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_employees', models.PositiveIntegerField(default=0)),
                ('employees_on_leave_count', models.PositiveIntegerField(default=0)),
                ('max_leave_percentage', models.DecimalField(decimal_places=2, default=30.0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('is_critical', models.BooleanField(default=False, help_text='True if leave percentage exceeds threshold')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_schedules', to='employees.department')),
                ('employees_on_leave', models.ManyToManyField(related_name='team_schedule_dates', to='employees.employee')),
            ],
            options={
                'ordering': ['date', 'department'],
                'unique_together': {('department', 'date')},
            },
        ),
    ]
