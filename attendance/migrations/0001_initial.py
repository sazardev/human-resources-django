# Generated by Django 5.2.1 on 2025-06-01 14:52

import datetime
import django.db.models.deletion
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0002_historicaldepartment_historicalemployee_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('employee', 'Employee Report'), ('department', 'Department Report')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('report_data', models.JSONField()),
                ('file', models.FileField(blank=True, null=True, upload_to='attendance_reports/')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employees.department')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employees.employee')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalAttendanceReport',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('employee', 'Employee Report'), ('department', 'Department Report')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('report_data', models.JSONField()),
                ('file', models.TextField(blank=True, max_length=100, null=True)),
                ('generated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('department', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.department')),
                ('employee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee')),
                ('generated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical attendance report',
                'verbose_name_plural': 'historical attendance reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTimeEntry',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('entry_type', models.CharField(choices=[('regular', 'Regular Time'), ('overtime', 'Overtime'), ('break', 'Break'), ('lunch', 'Lunch Break'), ('personal', 'Personal Time')], default='regular', max_length=20)),
                ('clock_in', models.DateTimeField()),
                ('clock_out', models.DateTimeField(blank=True, null=True)),
                ('break_duration', models.DurationField(default=datetime.timedelta(0))),
                ('clock_in_location', models.CharField(blank=True, max_length=200)),
                ('clock_out_location', models.CharField(blank=True, max_length=200)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active (Clocked In)'), ('completed', 'Completed'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('edited', 'Manually Edited')], default='active', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('original_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('adjusted_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('adjustment_reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('is_remote_work', models.BooleanField(default=False)),
                ('project_code', models.CharField(blank=True, help_text='Optional project or task code', max_length=50)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('adjusted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical time entry',
                'verbose_name_plural': 'historical time entrys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTimesheet',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('week_start', models.DateField(help_text='Monday of the week')),
                ('week_end', models.DateField(help_text='Sunday of the week')),
                ('total_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('regular_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('break_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('paid', 'Paid')], default='draft', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('employee_notes', models.TextField(blank=True, help_text='Employee comments')),
                ('manager_notes', models.TextField(blank=True, help_text='Manager comments')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical timesheet',
                'verbose_name_plural': 'historical timesheets',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWorkSchedule',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('schedule_type', models.CharField(choices=[('standard', 'Standard (Mon-Fri)'), ('shift', 'Shift Work'), ('flexible', 'Flexible Hours'), ('custom', 'Custom Schedule')], default='standard', max_length=20)),
                ('monday_start', models.TimeField(default='09:00')),
                ('monday_end', models.TimeField(default='17:00')),
                ('tuesday_start', models.TimeField(default='09:00')),
                ('tuesday_end', models.TimeField(default='17:00')),
                ('wednesday_start', models.TimeField(default='09:00')),
                ('wednesday_end', models.TimeField(default='17:00')),
                ('thursday_start', models.TimeField(default='09:00')),
                ('thursday_end', models.TimeField(default='17:00')),
                ('friday_start', models.TimeField(default='09:00')),
                ('friday_end', models.TimeField(default='17:00')),
                ('saturday_start', models.TimeField(blank=True, null=True)),
                ('saturday_end', models.TimeField(blank=True, null=True)),
                ('sunday_start', models.TimeField(blank=True, null=True)),
                ('sunday_end', models.TimeField(blank=True, null=True)),
                ('lunch_break_duration', models.DurationField(default=datetime.timedelta(seconds=3600))),
                ('break_duration', models.DurationField(default=datetime.timedelta(seconds=900))),
                ('daily_overtime_threshold', models.DecimalField(decimal_places=2, default=Decimal('8.00'), help_text='Hours per day before overtime applies', max_digits=4)),
                ('weekly_overtime_threshold', models.DecimalField(decimal_places=2, default=Decimal('40.00'), help_text='Hours per week before overtime applies', max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('department', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.department')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical work schedule',
                'verbose_name_plural': 'historical work schedules',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='TimeEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_type', models.CharField(choices=[('regular', 'Regular Time'), ('overtime', 'Overtime'), ('break', 'Break'), ('lunch', 'Lunch Break'), ('personal', 'Personal Time')], default='regular', max_length=20)),
                ('clock_in', models.DateTimeField()),
                ('clock_out', models.DateTimeField(blank=True, null=True)),
                ('break_duration', models.DurationField(default=datetime.timedelta(0))),
                ('clock_in_location', models.CharField(blank=True, max_length=200)),
                ('clock_out_location', models.CharField(blank=True, max_length=200)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active (Clocked In)'), ('completed', 'Completed'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('edited', 'Manually Edited')], default='active', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('original_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('adjusted_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('adjustment_reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('is_remote_work', models.BooleanField(default=False)),
                ('project_code', models.CharField(blank=True, help_text='Optional project or task code', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('adjusted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='adjusted_time_entries', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_time_entries', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='employees.employee')),
            ],
            options={
                'ordering': ['-clock_in'],
            },
        ),
        migrations.CreateModel(
            name='OvertimeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_date', models.DateField()),
                ('estimated_hours', models.DecimalField(decimal_places=2, max_digits=4)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_overtime_requests', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overtime_requests', to='employees.employee')),
                ('time_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='overtime_request', to='attendance.timeentry')),
            ],
            options={
                'ordering': ['-requested_date'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalOvertimeRequest',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('requested_date', models.DateField()),
                ('estimated_hours', models.DecimalField(decimal_places=2, max_digits=4)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('time_entry', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='attendance.timeentry')),
            ],
            options={
                'verbose_name': 'historical overtime request',
                'verbose_name_plural': 'historical overtime requests',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Timesheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start', models.DateField(help_text='Monday of the week')),
                ('week_end', models.DateField(help_text='Sunday of the week')),
                ('total_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('regular_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('break_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('paid', 'Paid')], default='draft', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('employee_notes', models.TextField(blank=True, help_text='Employee comments')),
                ('manager_notes', models.TextField(blank=True, help_text='Manager comments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_timesheets', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timesheets', to='employees.employee')),
            ],
            options={
                'ordering': ['-week_start'],
            },
        ),
        migrations.CreateModel(
            name='WorkSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('schedule_type', models.CharField(choices=[('standard', 'Standard (Mon-Fri)'), ('shift', 'Shift Work'), ('flexible', 'Flexible Hours'), ('custom', 'Custom Schedule')], default='standard', max_length=20)),
                ('monday_start', models.TimeField(default='09:00')),
                ('monday_end', models.TimeField(default='17:00')),
                ('tuesday_start', models.TimeField(default='09:00')),
                ('tuesday_end', models.TimeField(default='17:00')),
                ('wednesday_start', models.TimeField(default='09:00')),
                ('wednesday_end', models.TimeField(default='17:00')),
                ('thursday_start', models.TimeField(default='09:00')),
                ('thursday_end', models.TimeField(default='17:00')),
                ('friday_start', models.TimeField(default='09:00')),
                ('friday_end', models.TimeField(default='17:00')),
                ('saturday_start', models.TimeField(blank=True, null=True)),
                ('saturday_end', models.TimeField(blank=True, null=True)),
                ('sunday_start', models.TimeField(blank=True, null=True)),
                ('sunday_end', models.TimeField(blank=True, null=True)),
                ('lunch_break_duration', models.DurationField(default=datetime.timedelta(seconds=3600))),
                ('break_duration', models.DurationField(default=datetime.timedelta(seconds=900))),
                ('daily_overtime_threshold', models.DecimalField(decimal_places=2, default=Decimal('8.00'), help_text='Hours per day before overtime applies', max_digits=4)),
                ('weekly_overtime_threshold', models.DecimalField(decimal_places=2, default=Decimal('40.00'), help_text='Hours per week before overtime applies', max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employees.department')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='timeentry',
            index=models.Index(fields=['employee', 'clock_in'], name='attendance__employe_ccd268_idx'),
        ),
        migrations.AddIndex(
            model_name='timeentry',
            index=models.Index(fields=['status'], name='attendance__status_ee8ea1_idx'),
        ),
        migrations.AddIndex(
            model_name='timeentry',
            index=models.Index(fields=['entry_type'], name='attendance__entry_t_03c546_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='overtimerequest',
            unique_together={('employee', 'requested_date')},
        ),
        migrations.AddIndex(
            model_name='timesheet',
            index=models.Index(fields=['employee', 'week_start'], name='attendance__employe_cc321e_idx'),
        ),
        migrations.AddIndex(
            model_name='timesheet',
            index=models.Index(fields=['status'], name='attendance__status_6ab72c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='timesheet',
            unique_together={('employee', 'week_start')},
        ),
    ]
